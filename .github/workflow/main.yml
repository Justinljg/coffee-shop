name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ^1.22
      id: go

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-

    - name: Install Go tools
      run: |
        go install golang.org/x/lint/golint@latest
        go install golang.org/x/tools/gopls@latest
        go install golang.org/x/tools/cmd/gorename@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest
        go install mvdan.cc/gofumpt@latest

    - name: Wait for Postgres to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U testuser; do
          echo "Waiting for Postgres..."
          sleep 1
        done

    - name: Install migrate tool
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate

    - name: Install dependencies
      run: go mod tidy

    - name: Run linting script
      run: ./lint.sh

    - name: Run lint
      run: |
        golint ./...
        staticcheck ./...
        gofumpt -l -w .

    - name: Run tests
      run: |
        go test -v ./... || true

    - name: Run tests with coverage
      run: |
        go test -coverprofile=coverage.out ./... || true

    - name: Create output directory
      run: mkdir -p output/test

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o output/test/code-coverage.html

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: output/test/code-coverage.html

    - name: Run static analysis
      run: go vet ./...
